{"meta":{"title":"Miffy Chen'Blog","subtitle":"喵喵喵的前端之路","description":"我在苏州···","author":"Miffy Chen","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2018-01-06T08:09:32.000Z","updated":"2018-01-06T14:54:52.814Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-01-05T08:32:26.000Z","updated":"2018-01-05T08:33:34.164Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"浅学JavaScript（一）","slug":"浅学JavaScript","date":"2018-01-14T05:45:32.000Z","updated":"2018-01-14T05:53:00.234Z","comments":true,"path":"2018/01/14/浅学JavaScript/","link":"","permalink":"http://yoursite.com/2018/01/14/浅学JavaScript/","excerpt":"","text":"前言(什么是JavaScript) JavaScript 是一种编程语言，允许你创建动态更新的内容，控制多媒体，图像动画，和一些其他的东西。好吧，虽然不是一切，但是它的神奇之处是你能够用几行JavaScript代码就能实现。","categories":[],"tags":[{"name":"javaScript","slug":"javaScript","permalink":"http://yoursite.com/tags/javaScript/"}]},{"title":"浅学css（二）","slug":"浅学css二","date":"2018-01-06T05:43:57.000Z","updated":"2018-01-14T05:46:00.787Z","comments":true,"path":"2018/01/06/浅学css二/","link":"","permalink":"http://yoursite.com/2018/01/06/浅学css二/","excerpt":"","text":"","categories":[{"name":"learn","slug":"learn","permalink":"http://yoursite.com/categories/learn/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"}]},{"title":"浅学css(一)","slug":"浅学css-一","date":"2017-12-27T08:17:10.000Z","updated":"2018-01-13T13:13:14.178Z","comments":true,"path":"2017/12/27/浅学css-一/","link":"","permalink":"http://yoursite.com/2017/12/27/浅学css-一/","excerpt":"","text":"前言&emsp;&emsp;css的出现是为了让文章内容和显示分隔开来，css带来了很多好处，文件可读性增强，我们可以自己决定文章的显示。 Normal Flow(文档流，很差劲的翻译) 文档流是一个很差劲的翻译(—.-) 文档流中内联元素默认从左到右，宽度不够则自动换行。 文档流中块级元素从上到下排列，每个元素占一行。 块级元素高度由其内部文档流中元素的高度的总和确定 float:left、position:absolute、position:fixed可以使元素脱离文档流。 如果div里是内联元素，所有内联元素行高加起来，宽度自适应。 内联元素宽度受margin、padding、border影响，高度由行高决定。让导航栏左移 &emsp;&emsp;inline和inline-block元素有任何看不见的字符就是空格因此不要用inline元素，或者overflow用浮动,父元素添加clearfix类清除浮动123456789ul&gt;li&#123;float:left;&#125;.clearfix::after&#123; content:&apos;&apos;; display:block; clear:both;&#125; 控制换行 单词中断所有，控制分行word-break:break-all 文字溢出 只出现一行文本，多出的文字表示省略号 多行文本溢出搜索 css multi line text ellpsis 12345678910111213//一行div&#123; white-space:nowrap; //控制不分行 overflow:hidden; text-overflow:ellipsis;//变成省略号&#125; //多行 div&#123; display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical; overflow:hidden; &#125; 文字俩端对齐1234567891011121314151617181920212223/*html中加入如下内容*/&lt;div&gt; &lt;span&gt;姓名&lt;/span&gt;&lt;br&gt; &lt;span&gt;联系方式&lt;/span&gt; &lt;/div&gt; /*css*/ div&#123; font-size:20px;&#125;span&#123; width:5em; display: inline-block; text-align:justify; line-height:20px; height:20px; overflow:hidden;&#125;span::after&#123; content:&apos;&apos;; display: inline-block; width:100%;&#125; 文字垂直居中&emsp;&emsp;不要用height和line-height,会产生bug。1234div&#123; line-height:24px; padding:8px 0;&#125; margin 合并&emsp;&emsp;如果padding或border挡在父子元素之间，margin就不会合并overflow:hidden也不会合并（只是上下合并，不推荐）123456789101112131415&lt;div class= &quot;dad&quot;&gt; &lt;div class= &quot;son&quot;&gt; &lt;/div&gt;&lt;/div&gt;&lt;style&gt;.son&#123; border:15px solid red; padding: 10px; margin:10px;&#125;.dad&#123; outline:1px solid green; border-top:10px solid green;&#125;&lt;/style&gt; div里中div绝对居中 margin:auto和定宽定高一起用 宽高不确定用flex 123display:flex;justify-content:center;align-items:center; 实现一比一div&emsp;&emsp;宽度自适应，高度为0，padding将高度撑起来。123.one&#123; padding-top:100%;&#125;","categories":[{"name":"learn","slug":"learn","permalink":"http://yoursite.com/categories/learn/"}],"tags":[{"name":"css","slug":"css","permalink":"http://yoursite.com/tags/css/"}]},{"title":"初学html","slug":"初学html","date":"2017-12-22T12:22:43.000Z","updated":"2018-01-06T08:13:53.348Z","comments":true,"path":"2017/12/22/初学html/","link":"","permalink":"http://yoursite.com/2017/12/22/初学html/","excerpt":"","text":"初识HTMLHTML（HyperText Markup Language，超文本标记语言）是构成Web世界的基石，HTML 规范是由W3C制定的.而万维网联盟（W3C）是由蒂姆·伯纳斯-李于1994年10月离开欧洲核子研究中心（CERN）后成立。 HTML标签一、 iframe标签（不常用了）&lt;iframe&gt;表示嵌套的浏览上下文，将另一个HTML嵌入到当前页面。iframe默认宽高，可以用css。iframe很卡很慢，相当于新开一个窗口。1234&lt;iframe src=&quot;#&quot; frameborder=&quot;0&quot; name=&quot;aaa&quot;&gt;&lt;/iframe&gt;&lt;a target=&quot;aaa&quot; href=&quot;http://qq.com&quot;&gt;QQ&lt;/a&gt;&lt;a target=&quot;aaa&quot; href=&quot;http://baidu.com&quot;&gt;QQ&lt;/a&gt;&lt;!-- a标签在name为aaa的窗口打开 --&gt; 二、 a标签&lt;a&gt; 元素 (或锚元素) 可以创建一个到其他网页、文件、同一页面内的位置、电子邮件地址或任何其他URL的超链接。 target该属性指定在何处显示链接的资源,有四种: _self: 当前页面加载。 _blank: 新窗口打开。 _parent: （父级）加载响应到当前框架的HTML4父框架或当前的HTML5浏览上下文的父浏览上下文。如果没有parent框架或者浏览上下文，此选项的行为方式相同_self。 _top:（顶级窗口） HTML5中：加载响应进入顶层浏览上下文（即，浏览上下文，它是当前的一个的祖先，并且没有parent）。如果没有parent框架或者浏览上下文，此选项的行为方式相同_self。 herf定义一个超文本链接来源,绝对路径，相对路径，代码。123// qq.com#xxx ?name=aaa ./xx.htmljavascript:alert(1); &lt;a href=&quot;qq.com&quot;&gt;QQ&lt;/a&gt; 不会去qq网页,其实是个文件 &lt;a href=&quot;qq.com&quot;&gt;QQ&lt;/a&gt; 链接返回到页面顶部。 &lt;a href=&quot;//qq.com&quot;&gt;QQ&lt;/a&gt; 显示 file://qq.com/，当前文件是什么协议，就是什么协议。如果想要预览它一种是上传到github上，另一种是加个小工具，只需要按下边代码： 12npm i -g http-serverhttp-server -c-1 &lt;a href=&quot;&quot;&gt;QQ&lt;/a&gt;//刷新页面 &lt;a href=&quot;xx.html&quot;&gt;QQ&lt;/a&gt;// 直接到xx.html &lt;a href=&quot;#hiih&quot;&gt;QQ&lt;/a&gt;//不发起请求，页面内跳转 &lt;a href=&quot;?name=ccc&quot;&gt;QQ&lt;/a&gt;//?name=ccc到当前路径后边，发起get请求 javascript伪协议(//想写一个a标签，但是希望a标签不要跳转)12&lt;a href=&quot;javascript: ;&quot;&gt;QQ&lt;/a&gt;&lt;a href=&quot;javascript: alert(1);&quot;&gt;QQ&lt;/a&gt; download属性点击了使其不打开链接。而是下载当前页面的HTML。还有种下载是通过http响应设置content-type实现。 三、 form标签form标签跳转页面是post请求 form表单有两个方法，一种就是get，get会把参数放到查询参数里边,还有一种是method=”post”，post是放到第四部分。 form的target属性与a标签一样。 action 指定请求路径 四、 input/button标签 form表单里，button没写type会自动升级为提交按钮。 type改为submit也可以提交，其他type不能提交。 区别在于这俩个标签是否为空标签，input没有子元素，button有。 inputtype 属性有很多button,checkbox,radio,text等。 1234567891011121314 &lt;label&gt;密码&lt;input type=&quot;password&quot; name=&quot;username&quot; &gt;&lt;/label&gt; //单选框 &lt;label&gt;Yes&lt;input type=&quot;radio&quot; name=&quot;Yes&quot; &gt;&lt;/label&gt;&lt;label&gt;No&lt;input type=&quot;radio&quot; name=&quot;No&quot; &gt;&lt;/label&gt;//多选框&lt;label&gt;fruit&lt;input type=&quot;checkbox&quot; name=&quot;fruit&quot; value=&quot;peach&quot;&gt;peach&lt;/label&gt;x//select创建选项菜单,其multiple属性可以多选&lt;select name=&quot;select&quot; multiple&gt; &lt;option value=&quot;value1&quot;&gt;Value 1&lt;/option&gt; &lt;option value=&quot;value2&quot; selected&gt;Value 2&lt;/option&gt; &lt;option value=&quot;value3&quot;&gt;Value 3&lt;/option&gt;&lt;/select&gt;//textarea多行文本用css固定大小，还可以用rows和cols，一般用css。&lt;textarea style=&quot;resize:none;width:100px;height:100px&quot; name=&quot;textarea&quot; rows=&quot;10&quot; cols=&quot;50&quot;&gt;Write something here&lt;/textarea&gt; 五、table标签table 有三个元素tbody,thead,tfoot td 是table data tr 是table row12345678910111213141516171819202122232425262728293031323334353637&lt;table border=&quot;1&quot; &gt; &lt;colgroup&gt; &lt;col width=100&gt; &lt;col width=100 bgcolor =red&gt; &lt;col width=100&gt; &lt;col width=100&gt; &lt;/colgroup&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;项目&lt;/th&gt; &lt;th&gt;姓名&lt;/th&gt; &lt;th&gt;年级&lt;/th&gt; &lt;th&gt;分数&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;td&gt;小米&lt;/td&gt; &lt;td&gt;一年级&lt;/td&gt; &lt;td&gt;98&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;th&gt;&lt;/th&gt; &lt;td&gt;小吖&lt;/td&gt; &lt;td&gt;一年级&lt;/td&gt; &lt;td&gt;96&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;tfoot&gt;&lt;tr&gt; &lt;th&gt;平均分&lt;/th&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;97&lt;/td&gt; &lt;/tr&gt; &lt;/tfoot&gt;&lt;/table&gt; 六、空元素在 HTML 中，通常在一个空元素上使用一个闭标签是无效的。，没有子元素1&lt;area&gt;,&lt;base&gt;,&lt;br&gt;,&lt;col&gt;,&lt;colgroup&gt; when the span is present,&lt;command&gt;,&lt;embed&gt;,&lt;hr&gt;,&lt;img&gt;,&lt;input&gt;,&lt;keygen&gt;,&lt;link&gt;,&lt;meta&gt;,&lt;param&gt;,&lt;source&gt;,&lt;track&gt;,&lt;wbr&gt; 七、可替换元素 典型的可替换元素有 &lt;img&gt;、 &lt;object&gt;、 &lt;video&gt; 和 表单元素，如&lt;textarea&gt;、 &lt;input&gt; 。 某些元素只在一些特殊情况下表现为可替换元素，例如 &lt;audio&gt; 和 &lt;canvas&gt;。","categories":[{"name":"learn","slug":"learn","permalink":"http://yoursite.com/categories/learn/"}],"tags":[{"name":"html","slug":"html","permalink":"http://yoursite.com/tags/html/"}]},{"title":"http入门","slug":"http入门","date":"2017-12-16T11:53:18.000Z","updated":"2018-01-06T14:36:52.922Z","comments":true,"path":"2017/12/16/http入门/","link":"","permalink":"http://yoursite.com/2017/12/16/http入门/","excerpt":"","text":"WWW的发明 Tim Berners-Lee（李爵士） 在 1989 年至 1992 年间，发明了 WWW（World Wide Web），一种适用于全世界的网络。 主要包含三个概念 URI（Uniform Resource Identifier）俗称网址 HTTP（HyperText Transfer Protocol）俩电脑之间传输内容的协议。 HTML(HyperText Markup Language)主要用作页面跳转。 URI (Uniform Resource Identifier，统一资源标识符) URI分为URN和URL，一般使用 URL 作为网址。 URI用字符串标识某一互联网资源，而URL表示资源的地点。 URL (Uniform Resource Locator,统一资源定位符) URL包括协议，域名，路径，端口号，查询参数，锚点。 URN (Uniform Resource Name) URN就是个名字，ISBN: 9787115275790 就是一个 URN，通过 URN 你可以确定一个「唯一的」资源 DNS（Domain Name System,域名系统） 输入域名 返回对应 IP 通过以下俩种方式访问百度： 12nslookup baidu.comping baidu.com 还可以改变hosts文件来访问google 请求与响应( Sever + Client + HTTP) 浏览器负责发起请求\\ 服务器在 80 端口接收请求 服务器负责返回内容（响应） 浏览器负责下载响应内容 HTTP 的作用就是指导浏览器和服务器如何进行沟通。 请求与响应示例1curl -s -v -H &quot;Frank: xxx&quot; -- &quot;https://www.baidu.com&quot; 请求内容为12345 GET / HTTP/1.1Host: www.baidu.comUser-Agent: curl/7.54.0Accept: */*Frank: xxx 响应内容为123456789101112131415HTTP/1.1 200 OKAccept-Ranges: bytesCache-Control: private, no-cache, no-store, proxy-revalidate, no-transformConnection: Keep-AliveContent-Length: 2443Content-Type: text/htmlDate: Tue, 10 Oct 2017 09:14:05 GMTEtag: &quot;5886041d-98b&quot;Last-Modified: Mon, 23 Jan 2017 13:24:45 GMTPragma: no-cacheServer: bfe/1.0.8.18Set-Cookie: BDORZ=27315; max-age=86400; domain=.baidu.com; path=/&lt;!DOCTYPE html&gt;&lt;!--STATUS OK--&gt;&lt;html&gt; &lt;head&gt; 后面太长，省略了…… 请求与响应格式请求的格式1234567891 动词 路径 协议/版本2 Key1: value12 Key2: value22 Key3: value32 Content-Type: application/x-www-form-urlencoded2 Host: www.baidu.com2 User-Agent: curl/7.54.03 4 要上传的数据 请求最多包含四部分，最少包含三部分。（也就是说第四部分可以为空） 第三部分永远都是一个回车（\\n） 动词有 GET POST PUT PATCH DELETE HEAD OPTIONS 等 这里的路径包括「查询参数」，但不包括「锚点」 如果你没有写路径，那么路径默认为 / 第 2 部分中的 Content-Type 标注了第 4 部分的格式 响应的格式12345671 协议/版本号 状态码 状态解释2 Key1: value12 Key2: value22 Content-Length: 179312 Content-Type: text/html34 要下载的内容 状态码123451xx 信息状态码2xx 成功状态码3xx 重定向状态码4xx 客户端错误状态码5xx 服务端错误状态码 用谷歌查看请求与响应 请求：打开 Network，地址栏输入网址，在 Network 点击，查看 request，点击「view source」，可以看到请求的前三部分了，如果有请求的第四部分，那么在 FormData 或 Payload 里面可以看到 响应：打开 Network，输入网址，选中第一个响应，查看 Response Headers，点击「view source」，你会看到响应的前两部分，查看 Response 或者 Preview，你会看到响应的第 4 部分","categories":[{"name":"learn","slug":"learn","permalink":"http://yoursite.com/categories/learn/"}],"tags":[{"name":"http","slug":"http","permalink":"http://yoursite.com/tags/http/"}]},{"title":"win10上利用hexo与github写博客","slug":"hexo博客","date":"2017-12-14T12:44:04.000Z","updated":"2018-01-06T14:37:14.924Z","comments":true,"path":"2017/12/14/hexo博客/","link":"","permalink":"http://yoursite.com/2017/12/14/hexo博客/","excerpt":"","text":"安装Hexo第一步是安装Node.js(之前已经安装过了，可以利用cnpm安装hexo） npm install -g cnpm --registry=https://registry.npm.taobao.org 1. cd ~/Desktop 2. 在 GitHub 上新建一个空 repo，repo 名称是「你的用户名.github.io」 3. cnpm install -g hexo-cli，安装 Hexo 4. hexo init myBlog 5. cd myBlog 6. cnpm i 7. hexo new 博客名，看到一个md文件路径 8. start xxxxxxxxxxxxxxxxxxx.md，把xxx路径中的\\都换成/ 9. start _config.yml编辑网站配置 10. cnpm install hexo-deployer-git --save，安装 git 部署插件 11. hexo deploy 12. 进入「你的用户名.github.io」对应的 repo，打开 GitHub Pages 功能 hexo本地预览hexo s -g 然后在浏览器输入localhost：4000就可以看见了。 博客完成啦 可以自己随意换主题。我选了next，还是挺好看滴(#^.^#)。 超级棒的hexo个性化定制点击主题设置参考 Hexo使用攻略-添加分类及标签创建“分类”页并添加type属性 打开git bash，进入博客所在文件夹，执行命令hexo new page categories 成功后会提示：INFO Created: ~\\desktop\\myBlog\\source\\categories\\index.md根据随便的路径找到index.md,打开文件后，在里边添加type: &quot;categories&quot;(!!!type冒号后边一定要加空格）12345---title: 文章分类date: 2017-05-27 13:47:40type: &quot;categories&quot; //添加的--- 给文章添加属性打开需要添加的文章，为其添加属性。12345---title: 开博大吉date: 2017-12-14 20:25:10categories: 随笔感想 //添加的--- 创建标签选项（与上边类似）将categories改成tags就行了 博客管理一不小心就把博客玩坏啦，然后 我就o((⊙﹏⊙))o这样子了。当然，我还是机智的，google到了(#^.^#)，下边就是Google到的步骤： 使用git clone git@github.com:miffy24/miffy24.github.io.git拷贝仓库（默认分支为hexo）； 在本地新拷贝的miffy24.github.io文件夹下通过Git bash依次执行下列指令：npm install hexo、npm install、npm install hexo-deployer-git（记得，不需要hexo init这条指令）","categories":[{"name":"learn","slug":"learn","permalink":"http://yoursite.com/categories/learn/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"}]},{"title":"开博大吉","slug":"开博大吉","date":"2017-12-14T12:25:10.000Z","updated":"2018-01-06T07:45:31.394Z","comments":true,"path":"2017/12/14/开博大吉/","link":"","permalink":"http://yoursite.com/2017/12/14/开博大吉/","excerpt":"","text":"emmm,这是我创建的第一篇博客。啊哈，第一天我就不多写什么了(#^.^#)，其实是不知道写什么了囧。","categories":[{"name":"随想","slug":"随想","permalink":"http://yoursite.com/categories/随想/"}],"tags":[]}]}